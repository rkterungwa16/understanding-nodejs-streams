A readable stream represents a source of data.

A stream you can pipe from, but not pipe into.
You can recieve data, but not send data to it

When you push data into a readable stream, it is buffered,
until a consumer starts to read the data

There are two ways to recieve the data from a Readable stream:
  Non-flowing
  Flowing

Non-flowing mode: the default pattern for reading from a
Readable stream. Consists of

  Attaching a listener for the readable event that signals
  the availability of new data to read.

  Then, in a loop, we read all the data until the internal
  buffer is emptied.

   This can be done using the read() method, which synchronously
   reads from the internal buffer and returns a Buffer or String
   object representing the chunk of data.

  With non-flowing mode, the data is explicitly pulled from
  the stream on demand.

Flowing mode
  Another way to read from a stream.

  Attach a listener to the data event: this will switch the
  stream into using flowing mode, where the data is not
  pulled using read(), but instead it is pushed to the data
  listener as soon as it arrives.
